name: Build and Release

on: 
  workflow_dispatch:
    inputs:
      project-folder:
        required: false
        default: src/FolderDog
        type: string

permissions:
  contents: write

# TODO: Currently all jobs will create a different releases with the same name
# For Example:
# 1. Release 5 (for linux x64)
# 2. Release 5 (for windows x64)
# This needs to be fixed. Only one release should be created at the pipeline run, and that release should include all artifacts (windows, linux, etc)
jobs:
  build-and-release:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.project-folder }}
    strategy:
      matrix:
        runtime: [
          sdk-required,
          linux-x64,
          rhel-x64,
          win-x64
        ]
        include:
          - runtime: sdk-required
            release-name: Release ${{ github.run_number }} (Required .net7.0 runtime)
            runtime-configuration: ''
            asset-name: folder-dog-framework-dependent-${{ github.run_number }}.zip
          - runtime: linux-x64
            release-name: Release ${{ github.run_number }} for Linux
            runtime-configuration: '--runtime linux-x64 /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=false /p:SelfContained=true /p:IncludeNativeLibrariesForSelfExtract=false /p:DebugType=none'
            asset-name: folder-dog-linux-x64-${{ github.run_number }}.zip
          - runtime: rhel-x64
            release-name: Release ${{ github.run_number }} for RedHat
            runtime-configuration: '--runtime rhel-x64 /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=false /p:SelfContained=true /p:IncludeNativeLibrariesForSelfExtract=false /p:DebugType=none'
            asset-name: folder-dog-rhel-x64-${{ github.run_number }}.zip
          - runtime: win-x64
            release-name: Release ${{ github.run_number }} for Windows
            runtime-configuration: '--runtime win-x64 /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=false /p:SelfContained=true /p:IncludeNativeLibrariesForSelfExtract=false /p:DebugType=none'
            asset-name: folder-dog-windows-x64-${{ github.run_number }}.zip
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: |
          dotnet build --no-restore
          dotnet publish -c Release ${{ matrix.runtime-configuration }}
      - name: Zip Artifact
        run: |
          if [ "${{ matrix.runtime }}" = "sdk-required" ]; then
              folder="publish"
          else
              folder="${{ matrix.runtime }}/publish"
          fi
          echo "Files to zip:"
          ls /home/runner/work/folder-dog/folder-dog/src/FolderDog/bin/Release/net7.0/$folder
          tar -C /home/runner/work/folder-dog/folder-dog/src/FolderDog/bin/Release/net7.0/$folder -cvzf ${{ matrix.asset-name }} .

      - name: Create a release
        id: new-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ matrix.runtime }}-${{ github.run_number }}
          release_name: ${{ matrix.release-name }}
      - name: Upload Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.new-release.outputs.upload_url }}
          asset_name: ${{ matrix.asset-name }}
          asset_content_type: application/zip
